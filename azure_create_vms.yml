- name: Create Azure VM
  hosts: localhost
  connection: local
  vars:
    resource_group: demo
    location: northeurope
    storage_type: Standard_LRS
    os_disk_type: StandardSSD_LRS
    vm_size: Standard_B1s
    admin_username: rheldemo
    ssh_pub_key:
    image: rhel85-gm
    vm_prefix: azure
    num_vm: 2

  tasks:
  - name: try to set a unique storageaccount name
    set_fact:
      storageaccount_name: "{{ resource_group }}{{ 10000000 |random}}"

  - name: Create the resource group
    azure_rm_resourcegroup:
      name: "{{ resource_group }}"
      location: "{{ location }}"

  - name: Create a storage account
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: "{{ storageaccount_name }}"
      type: "{{ storage_type }}"

  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: "{{ resource_group }}"
      name: "{{ resource_group }}-vnet"
      address_prefixes: "10.0.0.0/16"

  - name: Add subnet
    azure_rm_subnet:
      resource_group: "{{ resource_group }}"
      name: default
      address_prefix: "10.0.1.0/24"
      virtual_network: "{{ resource_group }}-vnet"

  - name: Create public IPs
    azure_rm_publicipaddress:
      resource_group: "{{ resource_group }}"
      allocation_method: Static
      name: "{{ vm_prefix }}{{ item }}-pubip"
    with_sequence: start=1 end={{num_vm|int}}
    async: 1000
    poll: 0
    register: publicip

  - name: "Check Public IPs Created"
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: publicip_status
    until: publicip_status.finished
    retries: 500
    delay: 4
    with_items: "{{ publicip.results }}"

  - name: Get facts for all Public IPs
    azure_rm_publicipaddress_facts:
      resource_group: "{{ resource_group }}"
    register: output_ip_address

  - name: Show Public IP address
    debug:
      msg: "{{ item.properties.ipAddress }}"
    with_items: "{{ output_ip_address.ansible_facts.azure_publicipaddresses }}"

  - name: Setup in-memory inventory
    add_host:
      hostname: "{{ item.properties.ipAddress }}"
      groups: just_created_vms
    with_items: "{{ output_ip_address.ansible_facts.azure_publicipaddresses }}"

  - name: Create Network Security Group that allows SSH/Cockpit
    azure_rm_securitygroup:
      resource_group: "{{ resource_group }}"
      name: "{{ resource_group }}-nsg"
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 101
          direction: Inbound
        - name: COCKPIT
          protocol: Tcp
          destination_port_range: 9090
          access: Allow
          priority: 102
          direction: Inbound

  - name: Create virtual network inteface card
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_prefix }}{{ item }}-Nic"
      virtual_network: "{{ resource_group }}-vnet"
      subnet: default
      public_ip_name: "{{ vm_prefix }}{{ item }}-pubip"
      security_group: "{{ resource_group }}-nsg"
    with_sequence: start=1 end={{num_vm|int}}
    async: 1000
    poll: 0
    register: nic

  - name: "Check Nic Created"
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: nic_status
    until: nic_status.finished
    retries: 500
    delay: 4
    with_items: "{{ nic.results }}"

  - name: Create VM
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_prefix }}{{ item }}"
      vm_size: "{{ vm_size }}"
      managed_disk_type: "{{ os_disk_type }}"
      storage_account_name: "{{ storageaccount_name }}"
      admin_username: "{{ admin_username }}"
      ssh_password_enabled: false
      ssh_public_keys:
        - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
          key_data: "{{ ssh_pub_key }}"
      network_interfaces: "{{ vm_prefix }}{{ item }}-Nic"
      image: "{{ image }}"
    with_sequence: start=1 end={{num_vm|int}}
    async: 1000
    poll: 0
    register: vm

  - name: "Check VM Created"
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: vm_status
    until: vm_status.finished
    retries: 500
    delay: 4
    with_items: "{{ vm.results }}"

- name: "[Play 2] Post Configuration of VMs"
  hosts: just_created_vms
  become: true
  vars:

  tasks:
  - include_role:
      name: ansible-role-rhsm

  - include_role:
      name: ansible-collections-insights
    vars:
      insights_display_name: "{{ ansible_hostname }}"

